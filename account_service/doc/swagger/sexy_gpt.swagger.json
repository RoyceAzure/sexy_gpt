{
  "swagger": "2.0",
  "info": {
    "title": "sexy gpt API",
    "version": "0.1",
    "contact": {
      "name": "sexy gpt project",
      "url": "https://github.com/RoyceAzure/sexy_gpt",
      "email": "roycewnag@gmail.com"
    }
  },
  "tags": [
    {
      "name": "AccountService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/login": {
      "post": {
        "summary": "Login a user",
        "description": "Use this API to login a user",
        "operationId": "AccountService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAuthDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginRequset"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/logout": {
      "get": {
        "summary": "Logout user",
        "description": "需要token，Use this API to logout user",
        "operationId": "AccountService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAuthDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/refresh": {
      "post": {
        "summary": "Refresh token",
        "description": "不需要token，Use this API to refresh token",
        "operationId": "AccountService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAuthDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRefreshTokenRequset"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/user": {
      "get": {
        "summary": "Get user",
        "description": "需要token，uuid必填,若沒有填，則使用Token內的uuid查詢(查詢自己)，只有內部使用者可以查詢其他使用者資料",
        "operationId": "AccountService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUserDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "summary": "Create new user",
        "description": "不須token，userName必填，email必填，pas必填且長度\u003e=6，包含大小寫字母跟數字，需要接收email認證",
        "operationId": "AccountService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUserDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateUserRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "patch": {
        "summary": "Update new user",
        "description": "需要token，userId,email為必填，修改使用者資料, 目前只能修改userName，內部使用者目前可以修改其他人資料",
        "operationId": "AccountService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUserDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/user/email": {
      "get": {
        "summary": "Get user by email",
        "description": "需要token，email非必填，只有內部使用者會根據email查詢，一般使用者使用token內的email資料查詢",
        "operationId": "AccountService_GetUserByEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUserDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/user/password": {
      "patch": {
        "summary": "Update user password",
        "description": "需要token，userId, pas必填, 修改使用者密碼，修改完後要再call logout，讓使用者重新登入",
        "operationId": "AccountService_UpdateUserPas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUserDTOResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUserPasRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Get all users",
        "description": "需token，參數都是非必填，只有內部使用者可以使用，查詢所有user資料",
        "operationId": "AccountService_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUserDTOsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/vertifyEmail": {
      "get": {
        "summary": "vertified email",
        "description": "不需要token，Use this API to vertified email",
        "operationId": "AccountService_VertifyEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVertifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secretCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/vertifyEmail/send": {
      "post": {
        "summary": "send verify email",
        "description": "不需要token，記送認證信，email不存在一樣返回成功",
        "operationId": "AccountService_SendVertifyEmai",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVertifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbSendVertifyEmailRequset"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    }
  },
  "definitions": {
    "pbAuthDTOResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/pbUserDTO"
        },
        "token": {
          "$ref": "#/definitions/pbToken"
        }
      }
    },
    "pbCreateUserRequest": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbLoginRequset": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbRefreshTokenRequset": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "pbSendVertifyEmailRequset": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "pbToken": {
      "type": "object",
      "properties": {
        "audience": {
          "type": "string"
        },
        "Issuer": {
          "type": "string"
        },
        "issureAt": {
          "type": "string",
          "format": "date-time"
        },
        "expiredAt": {
          "type": "string",
          "format": "date-time"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "pbUpdateUserPasRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbUpdateUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "pbUserDTO": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        }
      }
    },
    "pbUserDTOResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/pbUserDTO"
        }
      }
    },
    "pbUserDTOsResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUserDTO"
          }
        }
      }
    },
    "pbVertifyEmailResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
